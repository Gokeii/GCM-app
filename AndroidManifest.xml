<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.colorcloud.gcm"
    android:versionCode="1"
    android:versionName="1.0" >
    
    <uses-feature android:name="android.hardware.usb.accessory" />
    <uses-sdk android:minSdkVersion="12" />
    

    <!--  permission for C2DM API -->
    <permission
        android:name="com.colorcloud.gcm.permission.C2D_MESSAGE"
        android:protectionLevel="signature" />

    <uses-permission android:name="com.colorcloud.gcm.permission.C2D_MESSAGE" />
    <uses-permission android:name="com.google.android.c2dm.permission.RECEIVE" />
    <uses-permission android:name="android.permission.GET_ACCOUNTS" />
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />

    <!--  note: we had to change "icon" to "ic_launcher" to get the icon resources
        	to line up (differing from the tutorial) -->
        	
    <!--  permission for knowing when boot is finished so we can start our registration service -->  
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED"/>
    
    <!--  main application -->
    <application
        android:name="GcmApp"
        android:icon="@drawable/ic_launcher"
        android:label="@string/app_name" >
        
        <uses-library android:name="com.android.future.usb.accessory" />
        
        <!--  main window -->
        <activity android:label="@string/app_name"
            android:name="com.colorcloud.gcm.MainActivity" >
            <intent-filter >
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <!--
          BroadcastReceiver that will receive intents from GCM
          services and handle them to the custom IntentService.
          The com.google.android.c2dm.permission.SEND permission is necessary
          so only GCM services can send data messages for the app.
        -->
        <receiver
            android:name="com.google.android.gcm.GCMBroadcastReceiver"
            android:permission="com.google.android.c2dm.permission.SEND" >
            <intent-filter>
            <!-- Receives the actual messages. -->
            <action android:name="com.google.android.c2dm.intent.RECEIVE" />
            <!-- Receives the registration id. -->
            <action android:name="com.google.android.c2dm.intent.REGISTRATION" />
            <category android:name="com.colorcloud.gcm" />
            </intent-filter>
        </receiver>

        <!--
           Application-specific subclass of GCMBaseIntentService that will
           handle received messages.
           By default, it must be named .GCMIntentService, unless the
           application uses a custom BroadcastReceiver that redefines its name.
        -->
        <service android:name=".GCMIntentService" />

        <!--  callback for boot completed, note that you need the permission here as well
        to know when boot is finished -->
        <receiver android:name=".GcmBootCompleteReceiver"
            android:enabled="true"
            android:permission="android.permission.RECEIVE_BOOT_COMPLETED">
			<intent-filter>
				<action android:name="android.intent.action.BOOT_COMPLETED" />
				<category android:name="android.intent.category.HOME" />
			</intent-filter>
		</receiver>

        <!--  main service startup -->
        <service android:name=".GcmService">
		    <intent-filter>
                <action android:name="com.colcom.colorcloud.gcm.GcmService" />
            </intent-filter>
		</service>

        <!-- bkgrd service that keeps an open connection to Parse push server -->
        <service android:name="com.parse.PushService" />

        <!-- Parse internal Intent recvr -->
        <receiver android:name="com.parse.ParseBroadcastReceiver">
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED" />
                <action android:name="android.intent.action.USER_PRESENT" />
            </intent-filter>
        </receiver>

        <!-- my custom Intent recvr -->
        <receiver android:name="com.colorcloud.gcm.ParserReceiver">
            <intent-filter>
                <action android:name="com.colorcloud.gcm.locationchange" />
            </intent-filter>
        </receiver>

        <activity android:name=".UsbAccessoryActivity">
			<intent-filter>
				<action android:name="android.hardware.usb.action.USB_ACCESSORY_ATTACHED" />
			</intent-filter>

			<meta-data android:name="android.hardware.usb.action.USB_ACCESSORY_ATTACHED"
				android:resource="@xml/accessory_filter" />
		</activity>
        
        <service android:name=".UsbFromC2DMService">
			<intent-filter>
				<action android:name="android.hardware.usb.action.USB_ACCESSORY_ATTACHED" />
			</intent-filter>

			<meta-data android:name="android.hardware.usb.action.USB_ACCESSORY_ATTACHED"
				android:resource="@xml/accessory_filter" />
		</service>

        <provider android:name="com.colorcloud.gcm.GcmContentProvider"
                  android:authorities="com.colorcloud.gcm"
                  android:syncable="false"
                  android:multiprocess="false" >
        </provider>
        
    </application>
    
    
</manifest>
